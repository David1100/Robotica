---
import { formatPrice } from "@/utils/functions";
import AddToCart from "./AddToCart";

const { itemData } = Astro.props;
---

<article
    class="rounded-xl border-[1px] border-bgPrimary shadow-md shadow-bgPrimary px-8 py-4 relative backdrop-blur-md animate-slide-in-top"
>
    <!-- Imagen difuminada de fondo -->
    <!-- <div class="absolute inset-0 -z-10">
        <img
            src="/images/fondo-lego.webp"
            alt="Fondo"
            class="w-full h-full object-cover blur-xs opacity-40"
        />
    </div> -->
    <div class="flex justify-between items-center">
        <h1 class="text-4xl text-bgPrimary font-semibold">${formatPrice(itemData.price.toString())}</h1>
        <span
            class="border-bgPrimary border-[1px] text-black/50 w-8 h-8 flex items-center justify-center text-sm rounded-full"
            >{itemData.edad}</span
        >
    </div>
    <h1 class="text-2xl drop-shadow-md mt-2">{itemData.fullname}</h1>

    <ul class="flex flex-col gap-y-2 mt-6">
        <h2 class="text-gray-400 drop-shadow-md">Que incluye ?</h2>
        {
            itemData.items.map((kit: any) => (
                <li class="flex items-center gap-2 hover:scale-105 transition-all">
                    <span class="text-bgPrimary w-6 h-6 flex items-center justify-center text-xs">
                        {kit.count}
                    </span>
                    {kit.text}
                </li>
            ))
        }
    </ul>
    <AddToCart product={itemData} textoBtn={"AÃ±adir al carrito"} client:load />
    <img
        src={itemData.image}
        width="250"
        alt=""
        class="absolute right-8 top-30 animate-bouncing animate-iteration-count-infinite animate-duration-[3200ms] hidden md:flex"
    />
</article>
